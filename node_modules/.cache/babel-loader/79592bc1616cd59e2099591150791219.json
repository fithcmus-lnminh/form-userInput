{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueInputChangeHandler = event => {\n    setEnteredValue(event.target.value); //IMPORTANT:\n    //Once component rendered when enter a keystroke, enteredValueIsValid is true\n  };\n\n  const valueInputBlurHandler = () => {\n    setIsTouched(true); //only when blur -> validate input values\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    //or only hasError, though\n    valueInputChangeHandler,\n    valueInputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useInput;","map":{"version":3,"sources":["D:/React Practice/form-userInput/src/hooks/use-input.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueInputChangeHandler","event","target","value","valueInputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,QAAMI,uBAAuB,GAAIC,KAAD,IAAW;AACzCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADyC,CAEzC;AACA;AACD,GAJD;;AAMA,QAAMC,qBAAqB,GAAG,MAAM;AAClCP,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADkC,CACd;AACrB,GAFD;;AAIA,QAAMQ,KAAK,GAAG,MAAM;AAClBV,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLM,IAAAA,KAAK,EAAET,YADF;AAELY,IAAAA,OAAO,EAAER,YAFJ;AAGLC,IAAAA,QAAQ,EAAEA,QAHL;AAGe;AACpBC,IAAAA,uBAJK;AAKLI,IAAAA,qBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA9BD;;GAAMb,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueInputChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n    //IMPORTANT:\r\n    //Once component rendered when enter a keystroke, enteredValueIsValid is true\r\n  };\r\n\r\n  const valueInputBlurHandler = () => {\r\n    setIsTouched(true); //only when blur -> validate input values\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError: hasError, //or only hasError, though\r\n    valueInputChangeHandler,\r\n    valueInputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}